<!DOCTYPE html>

<html>
<head>
    <title>XSockets Simple Chat</title>
    <style type="text/css">
        .container {
            background-color: #99CCFF;
            border: thick solid #808080;
            padding: 20px;
            margin: 20px;
        }
    </style>
</head>
<body>
    <p><strong>To connect the web client, reload this page after a server is started</strong></p>
    <div class="container">
        <select id="location">
            <option value="All">All</option>
            <option value="Sweden">Sweden</option>
            <option value="Norway">Norway</option>
            <option value="Denmark">Denmark</option>
        </select>
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />
        <ul data-bind="foreach:messages">
            <li data-bind="text:$data"></li>
        </ul>
    </div>
    <script src="/Scripts/jquery-2.1.1.min.js"></script>
    <script src="/Scripts/XSockets.latest.min.js"></script>
    <script src="/Scripts/knockout-3.2.0.debug.js"></script>
    <script type="text/javascript">
        //ViewModel
        var vm = { messages: ko.observableArray([]) };
        ko.applyBindings(vm);        

        //Setup the connections to the chat controller
        var conn = new XSockets.WebSocket("ws://localhost:8080", ['chat']);

        //Extract the chat controller.
        var chat = conn.controller('chat');

        chat.onopen = function () {
            // Get the user name and store it to prepend to messages.
            var username = prompt('Enter your name:', '');
            chat.setProperty('username', username);
        };

        // Create a function that the controller can call to broadcast messages.
        chat.addmessage = function (message) {
            vm.messages.push(message);
        };

        // Set initial focus to message input box.
        $('#message').focus();
        
        $('#sendmessage').click(function () {
            // Call the Send method on the controller.
            chat.invoke('send', $('#message').val());
            // Clear text box and reset focus for next comment.
            $('#message').val('').focus();
        });

        $('#location').on('change',function(e) {
            e.preventDefault();
            chat.setEnum('location', $(this).val());
        });

    </script>

</body>
</html>
