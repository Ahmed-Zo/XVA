<!DOCTYPE html>
<html>
<head>
    <title>XVA-05-03-DataChannels</title>
    <style>
        li progress {
            display: block;
        }

        li a {
            margin-left: 10px;
        }
    </style>
</head>
<body>
    <h1>RTCDataChannel - Fileshare</h1>
    <input type="file" id="share" />
    <progress value="0" max="0" id="prg-send"></progress>
    <hr />
    <h2>Files received</h2>
    <ul></ul>
    <script src="~/Scripts/fileShare.js"></script>
    <script src="//rawgit.com/XSockets/XSockets.Clients/master/src/XSockets.Clients/XSockets.JavaScript/XSockets.latest.js"></script>
    <script src="//rawgit.com/XSockets/XSockets.WebRTC/master/src/js/XSockets.WebRTC.latest.js"></script>
    <script>
        var $ = function (selector, ctx) {
            if (arguments.length === 0) return document;
            if (!ctx) ctx = document;
            return ctx.querySelector(selector);
        };
        var wsUrl = "ws://" + location.host;
        var ws, rtc, dc;
        var myContext = "1f4387f3-379e-4b81-8997-725415165982";
        var fs;
        $().addEventListener("DOMContentLoaded", function () {
            ws = new XSockets.WebSocket(wsUrl, ["connectionbroker"], {
                ctx: myContext
            });
            rtc = new XSockets.WebRTC(ws.controller("connectionbroker"));
            fs = new FileShare();
            fs.onreceive = function (shareId, bytesRead) {
                $("li#" + shareId + " progress").setAttribute("value", bytesRead);
            };
            fs.oncomplete = function (share) {
                var download = document.createElement("a");
                var file = fs.getFileShareById(share);
                var blob = new Blob([file.buffer], {
                    type: file.type
                });
                download.innerText = "download";
                download.setAttribute("download", file.fileName);
                var url = window.URL.createObjectURL(blob);
                download.setAttribute("href", url);
                $("#" + share).appendChild(download);
            }
            fs.onstarted = function (f) {
                var fileEl = document.createElement("li");
                fileEl.innerText = f.name;
                fileEl.setAttribute("id", f.shareId);
                var progressBar = document.createElement("progress");
                progressBar.setAttribute("max", f.size);
                progressBar.setAttribute("value", 0);
                fileEl.appendChild(progressBar);
                $("ul").appendChild(fileEl);
            };
            dc = new XSockets.WebRTC.DataChannel("fileShare");
            dc.subscribe("receivefile", function (binaryMessage) {
                fs.receive(binaryMessage);
            });
            rtc.addDataChannel(dc);
            rtc.oncontextcreated = function (ctx) {
                rtc.connectToContext();
            };
            $("#share").addEventListener("change", function (evt) {
                var shareId = XSockets.Utils.randomString(16);
                var totalSize = evt.target.files[0].size;
                // set the expected size to be sent
                $("#prg-send").setAttribute("max", totalSize);
                var r = new XSockets.ReadFile();
                r.readChunks(evt.target.files[0], 1024, function (file, bytes, fin, bytesRead) {
                    dc.publishBinary("receivefile", bytes, {
                        shareId: shareId,
                        name: file.name,
                        type: file.type,
                        size: file.size,
                        fin: fin
                    });
                    // how much is sent?
                    $("#prg-send").setAttribute("value", bytesRead);
                });
            }, false);
        });
    </script>


</body>
</html>
